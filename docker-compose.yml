services:
  front:
    build: 
      # https://forums.docker.com/t/passing-command-line-arguments-in-docker-compose/137996
      context: ./frontend-web
      dockerfile: Dockerfile
      args:
        - VITE_BACKEND_URL=http://localhost:5050
        - VITE_CDN_URL=http://localhost:9080
    container_name: front
    networks:
      - frontend
    depends_on:
      coordinator:
        condition: service_healthy
    ports:
      - '5173:4173'
    env_file:
      - config/.env.web

  coordinator:
    build: ./coordinator-server
    container_name: coordinator
    networks:
      - backend
      - frontend
    depends_on:
      game:
        condition: service_healthy
      cdn:
        condition: service_healthy
      mongo:
        condition: service_started
    ports:
      - '5050:5000'
    env_file:
      - config/.env.coordinator
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - GAME_SERVER_URL=http://game:6060
      - CDN_SERVER_URL=http://cdn:9080
      - NODE_ENV=production
    volumes:
      - ./data/installed/stored:/app/dist/installed
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/health/" ]
      interval: 30s
      timeout: 10s
      retries: 5
  
  game:
    build: ./game-server
    networks:
      - backend
    container_name: game
    restart: on-failure
    ports:
      - '6060:6000'
    depends_on:
      dlc-service:
        condition: service_completed_successfully
    env_file:
      - config/.env.game
    volumes:
      - ./data/installed/stored:/app/installed
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:6000" ]
      interval: 30s
      timeout: 10s
      retries: 5
  
  mongo:
    image: mongo:6.0.4
    container_name: mongo
    restart: always
    networks:
      - backend
    volumes:
      - ./data/mongo/stored:/data/db
      - ./mongo/init.sh:/docker-entrypoint-initdb.d/init.sh:ro
    ports:
      - '27017:27017'
    env_file:
      - config/.env.mongo
  
  cdn:
    build: ./cdn-service
    networks:
      - backend
    container_name: cdn
    restart: on-failure
    ports:
      - '9080:9000'
    env_file:
      - config/.env.cdn
    environment:
      - VALKEY_HOST=valkey
      - VALKEY_PORT=6379
    volumes:
      - ./data/cdn/stored:/app/data/stored
      - ./data/installed/stored:/app/data/installed
    depends_on:
      - valkey
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
  
  valkey:
    image: valkey/valkey:8.0.1
    networks:
      - backend
    container_name: valkey
    restart: on-failure
    ports:
      - '6379:6379'
  
  dlc-service:
    build: ./dlc-service
    env_file:
      - config/.env.dlc
    volumes:
      - ./data/installed/stored:/app/installed

networks:
  backend:
  frontend:


# CURRENTLY, DISCORD IS LAUNCHED LOCALLY. IF NEEDED DOCKER-COMPOSE, UNCOMMENT THE FOLLOWING LINES
#  discord:
#    build: ./frontend-discord
#    env_file:
#      - config/.env.discord
#    depends_on:
#      - coordinator
